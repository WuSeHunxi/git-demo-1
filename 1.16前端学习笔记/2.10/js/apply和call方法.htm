<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <script>
        /*
        apply和call方法的作用：专门用来修改指定方法内部的this
        格式：
        call(对象，参数1，参数2，.....);
        apply(对象，[数组]);
        */
        function test(){
            console.log(this);
        }
        var obj={"name":"ll"};
        /*
        1.通过window.test方法找到test方法
        2.通过apply(obj)将找到的test方法内部的this修改为自定义的对象obj
        */
        window.test.apply(obj);//apply最多可传两个参数
        window.test.call(obj);//call最少可传一个参数

        /*
        1.通过window.sum方法找到sum方法
        2.通过apply(obj)将找到的sum方法内部的this修改为自定义的对象obj
        3.将传入数组中的元素依次取出，传递给形参
        */
        function sum(a,b){
            console.log(this);
            console.log(a+b);//需要第三步
        }
        // window.sum.call(obj,1,2);
        
        var att={a:"",b:""};
        window.sum.apply(att,[2,4]);
        window.sum.apply(obj,[3,5]);
        
        //将真数组转化成伪数组
        var arr=[1,3,5,7,9];
        var obj={};
        /*
        1.通过[].push方法找到push方法
        2.通过apply(obj)将找到的push方法内部的this修改为自定义的对象obj
        3.将传入数组中的元素依次取出，传递给形参
        */
        [].push.apply(obj,arr);
        console.log(obj);
    </script>
</head>
<body>
    
</body>
</html>