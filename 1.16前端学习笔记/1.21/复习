1.点名册
    点名册的原理是将名字数组中随机产生的那一个添加到文档中（以文本的形式）
    <button id="begin">点名开始</button>
    <button id="end">点名结束</button>
    <div id="name"></div>
    <script>
        var name=document.getElementById("name");
        var begin=document.getElementById("begin");
        var end=document.getElementById("end");
        var time=null;
        var arr=['阿云嘎','郑云龙','蔡程昱','高天鹤','翟李硕天','余笛','洪之光','马佳','鞠洪川','王凯','蔡尧'];
        begin.onclick=function(){
            //先清除
            clearInterval(time);
            //设置定时器
            time=setInterval(function(){
                //随机数
                var index=parseInt(Math.random()*arr.length);
                var n=arr[index];
                name.innerText=n;    
            },20);
        };
        end.onclick=function(){
            clearInterval(time);
        }
2.一次定时器
        在给定的时间之后执行一次
    <button id="btn">3秒后去吃饭</button>
    <button id="btn1">停止</button>
    var btn=document.getElementById("btn");
    var btn1=document.getElementById("btn1");
    var time=null;
    btn.onclick=function(){
        //先清除
        clearTimeout(time);
        //一次定时器
        time=setTimeout(function(){
            console.log('ppp');
        },3000);//在3秒之后打印"ppp"
    };
    btn1.onclick=fucntion(){
        clearTimeout(time);
    }
PS：：：：：凡是动画想要动起来就必须用到定时器，因为运动是连续的
3.定时器匀速动画(运动需要步长)
    利用步长使其每次运动同一个距离
    <div id="box"></div>
    <button id="btn">开始动画</button>
    <script>
        var btn=document.getElementById("btn");
        var box=document.getElementById("box");
        var time=null，begin=0,step=10,target=600;
        btn.onclick=function(){
            clearInterval(time);
            time=setInterval(function(){
                begin=begin+step;
                if(begin>=target){
                    begin=target;
                    clearInterval(time);
                }
                //动起来(要把所得到的那些可以动的量加到盒子上去才能使盒子动起来)
                box.style.marginLeft=begin+'px';
            },100);
        }
    </script>
4.封装匀速运动的函数（传入的参数是：运动的对象，步长，结束位置）
    linearAnimation('btn','box',50,600);
    function linearAnimation(btnId,boxId,step,target){
        var btn=document.getElementById(btnId);
        var box=document.getElementById(boxId);
        var time=null，begin=0;
        btn.onclick=function(){
            clearInterval(time);
            time=setInterval(function(){
                begin=begin+step;
                if(begin>=target){
                    begin=target;
                    clearInterval(time);
                }
                //动起来(要把所得到的那些可以动的量加到盒子上去才能使盒子动起来)
                box.style.marginLeft=begin+'px';
            },100);
        }
    }
5.定时器的缓动动画(需要缓动公式:起始值+=（结束值-起始值)*缓动系数)
    <div id="box"></div>
    <button id="btn">开始动画</button>
    <script>
        var btn=document.getElementById(btnId);
        var box=document.getElementById(boxId);
        var time=null,begin=0,target=800;
        //事件监听
        btn.onclick=function(){
            clearInterval(time);
            time=setInterval(function(){
                //缓动公式
                begin=begin+(target-begin)*0.5;
                //判断
                if(Math.round(begin)>=target){
                    begin=target;
                    clearInterval(time);
                }
                //动起来
                box.style.marginLeft=begin;
            },100)
        }
6.仿淘宝轮播
    <style>
        *{
            padding:0;
            margin:0;
            list-style:none;
            text-decoration:none;
        }
        a{
            color:#000;
        }
        #box{
            width:322px;
            height:250px;
            border:1px solid #ccc;
            margin:100px auto;
            position:relative;
        }
        .right,.left{
            width:60px;
            height:250px;
            float:left;
        }
        .center{
            width:200px;
            height:250px;
            float:left;//让中间也进行浮动才能显示右面的列表
            border-left:1px solid #ccc;
            border-right:1px solid #ccc;
            overflow:hidden;
        }
        li{
            line-height:27px;
            text-align:center;
            border-bottom:1px solid #000;
        }
        .left li:last-child,.right li:last-child{
            border-bottom:none;
        }
        .current{
            background-color:red;
        }
    </style>
    <div id="box">
        <ul class="left">
            <li class="current"><a href="#">美食1</a></li>
            <li><a href="#">美食2</a></li>
            <li><a href="#">美食3</a></li>
            <li><a href="#">美食4</a></li>
            <li><a href="#">美食5</a></li>
            <li><a href="#">美食6</a></li>
            <li><a href="#">美食7</a></li>
            <li><a href="#">美食8</a></li>
            <li><a href="#">美食9</a></li>
        </ul>
        <div class="center">
            <a href="#"><img src="images/a1.png" width="200" height="200"></a>
            <a href="#"><img src="images/a2.png" width="200" height="200"></a>
            <a href="#"><img src="images/a3.png" width="200" height="200"></a>
            <a href="#"><img src="images/a4.png" width="200" height="200"></a>
            <a href="#"><img src="images/a1.png" width="200" height="200"></a>
            <a href="#"><img src="images/a2.png" width="200" height="200"></a>
            <a href="#"><img src="images/a3.png" width="200" height="200"></a>
            <a href="#"><img src="images/a4.png" width="200" height="200"></a>
            <a href="#"><img src="images/a1.png" width="200" height="200"></a>
            <a href="#"><img src="images/a2.png" width="200" height="200"></a>
            <a href="#"><img src="images/a3.png" width="200" height="200"></a>
            <a href="#"><img src="images/a4.png" width="200" height="200"></a>
            <a href="#"><img src="images/a1.png" width="200" height="200"></a>
            <a href="#"><img src="images/a2.png" width="200" height="200"></a>
            <a href="#"><img src="images/a3.png" width="200" height="200"></a>
            <a href="#"><img src="images/a4.png" width="200" height="200"></a>
            <a href="#"><img src="images/a1.png" width="200" height="200"></a>
            <a href="#"><img src="images/a2.png" width="200" height="200"></a>
            <a href="#"><img src="images/a3.png" width="200" height="200"></a>                
        </div>
        <ul class="right">
            <li><a href="#">美食10</a></li>
            <li><a href="#">美食11</a></li>
            <li><a href="#">美食12</a></li>
            <li><a href="#">美食13</a></li>
            <li><a href="#">美食14</a></li>
            <li><a href="#">美食15</a></li>
            <li><a href="#">美食16</a></li>
            <li><a href="#">美食17</a></li>
            <li><a href="#">美食18</a></li>            
        </ul>
    </div>
    <script>
        //拿到所有的标签和图片
        var allLis=document.getElementsByTagName("li");
        var allImages=document.getElementsByTagName("img");
        var time=null;
        //索引(用来进行跳转标记)
        var loop=0;
        //动态跳转(需要定时器)
        time=setInterval(function(){
            //索引++
            loop += 1;
            loop %= 18;//当达到第18个的时候可以重新再从1开始
            //排他思想
            for(var i=0;i<allLis.length;i++){
                allLis[i].className='';
                allImages[i].style.display='none';
            }
            allLis[loop].className='current';
            allImages[loop].style.display='block';
        },1000);
    </script>
PSSSSSSSSSSSS：：：：：：网页特效////////////////
    一.自定义动画
        animation:flash 0.5s alternate infinite(flash是变量的名字,0.5s是时间可以变化)
        //自定义动画
        @keyframes flash{
            0%{opacity:0;}
            100%{opacity:1;}
        }
7.星星特效(动态创建星星)//可以做个人博客的背景
    <style>
        *{
            margin:0;
            padding:0;
            list-style:none;
        }
        body{
            background-color:#000;
        }
        span{
            width:30px;
            height:30px;
            position:absolute;
            background:url('images/cloud_one') no-repeat;
            background-size:100% 100%;
            animaiton:flash 1s alternate infinite
        }
        @keyframes flash{
            0%{opacity:0;}
            100%{opacity:1;}
        }
        span:hover{
            transform:scale(3,3) rotate(180deg) !important;//优先执行
            transition:all 1s;//所有的星星都在1秒内过渡（上述的运动要在1秒内完成）
        }
    </style>
    <script>
        //求出屏幕的尺寸（将小星星平铺在页面内）
        var screenWidth=document.documentElement.clientWidth;
        var screenHeight=document.documentElement.clientHeight;
        //动态创建星星
        for(var i=0;i<150;i++){
            var span=document.createElement("span");
            document.body.appendChild(span);
            //给星星设置坐标（随机的）
            var x=Math.random()*screenWidth;
            var y=Math.random()*screenHeight;
            span.style.left=x+'px';
            span.style.top=y+'px';
            //星星的大小是随机的
            var scale=Math.random()*1.5;
            span.style.transform='scale('+scale+','+scale+')';
            //星星闪烁的频率(时间)是随机的
            var rate=Math.random()*1.5;
            span.style.animationDelay=rate+'s';
        }      
    </script>
PS::Underscore类库，JavaScript的使用库，封装了JavaScript对象的操作方法，
    可以被使用在Node.js运行环境。
    在Underscore对象的内部会优先调用宿主环境提供的内置方法，以此提高函数的执行效率。
    Underscore默认使用_(下划线)来访问和创建对象。
    //可以解决闭包作用域
    <script src="js/Underscore-min.js"></script>
    <script>
        var dataArr=["张三",19,"男",1212,13];
        //遍历的方法
        _.each(dataArr,function(item,index,arr){
            console.log(item,index);//输出每一项和索引
        });
        //去重，删除不想要的内容
        var nn=_.without(dataArr,"张三");
        console.log(nn);
        //随机数
        _.random(-5,5);
    </script>
8.个人相册(照片墙特效)
    需要引入Underscore
    <style>
        *{
            margin:0;
            padding:0;
            list-style:none;
            border:none;
        }
        html,body,ul{
            width:100%;
            height:100%;
        }
        #ps{
            position:relative;
        }
        #ps li{
            box-shadow:0 0 10px #000;
            height:360px;
            width:250px;
            position:absolute;
            transition:all 1s;
        }
        #ps li.current{
            left:50% !important;
            top:50%;
            transform:rotate(0deg) translate(-50%,-50%) scale(1.5,1.5) !important;
            z-index:99 !important;
        }
    <ul id="ps"></ul>
    <script src="Underscore-min.js"></script>//src的内容是Underscore所在的位置
    <script>
        var ps=document.getElementById("ps");
        //动态创建li(一共要创建10个)
        for(var i=0;i<10;i++){
            var li=document.createElement("li");
            ps.appendChild(li);
            //动态创建img(一共要创建10个)
            var img=document.createElement("img");
            img.src='images/a'+(i+1)+'.png';
            每创建一个li就会有一个img添加到li中
            li.appendChild(img);
        }
        //获取所有的li
        var allLis=ps.children;
        //求出频幕所能展示的宽度和高度
        var screenHeight=document.documentElement.clientHeight-250;
        var screenWidth=document.documentElement.clientWidth-360;
        //遍历，分布位置
        for(var j=0;j<allLis.length;j++){
            var li=allLis[j];
            //随机分布
            li.style.left=_.ranodm(0,screenWidth);
            li.style.top=_.random(0,screenHeigth);
            //随即角度
            li.style.transform='rotate('+_.random(0,360)+'deg)';
            //监听点击事件
            li.onclick=fucntion(){
                for(var i=0;i<allLis.length;i++){
                    allLis[i].className='';//其它的都没有
                }
                this.className='current';//只有一个有
            }
        }
    </script>

