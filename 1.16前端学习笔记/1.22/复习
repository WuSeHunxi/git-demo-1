1.offSet家族
    offsetWidth和offsetHeight:获取对象自身的宽度和高度，包括内容，边框和内边距，
        即：offsetWidth=width+border+padding
    【注意】与div.style.width的区别，div.style.width只能获取到行内的数值,且不包含内边距和边框
    offsetLeft和offsetTop:距离第一个有定位的父级盒子左边和上边的距离,从子盒子的
        边框到父盒子的边框的距离
    【注意】父盒子必须要有定位，如果没有则像上找父级，最终以body为准
        <style>
            *{
                padding:0;
                margin:0;
                list-style:none;
            }
            #father{
                width:400px;
                height:400px;
                margin:40px;
                position:relative;
                background-color:red;
            }
            #box{
                background-color:blue;
                padding:10px;
                border:5px solid #000;
                margin-left:20px;
                width:200px;
                height:150px;
            }
        <div id="father">
            <div id="box"></div>
        </div>
        <script>
            var father=document.getElementById("father");
            var box=document.getElementById("box");
            console.log(box.offsetLeft);
    offsetParent:返回当前对象的父级盒子，可能是父亲，也可能是爷爷
    【注意】offsetXXX和style.XXX的区别
        a.style.left只能获取行内的，而offsetLeft则可以获取到所有的
        b.offsetLeft可以返回没有定位盒子距离左侧的位置，而style.left不可以，
            其只能返回有定位的盒子的left
        c.offsetLeft返回的是数字，而style.left返回的是字符串，除了数字还有'px'
            因此在使用style.left的时候可以使用parseInt()进行转化
        d.offsetLeft是只读的，而style.left是可读可写的
        e.如果没有给当前的元素指定过top/left，则style.top/style.left返回的是空字符串
2.天猫弹性导航(需要用到缓动动画)
    <style>
        *{
            padding:0;
            margin:0
            border:0;
            list-style:none;
        }
        body{
            background-color:pink;
        }
        #nav{
            width:900px;
            height:63px;
            background:url('images/a1.png') no-repeat right center #fff;
            border-ragius:5px;
            position:relative;
        }
        #nav ul{
            position:relative;
        }
        #nav ul li{
            float:left;
            width:88px;
            height:63px;
            line-height:70px;
            text-align:center;
        }
        #t_mall{
            width:88px;
            height:63px;
            background:url('images/mall.png') no-repeat;//图片是天猫的样子
            position:absolute;//当背景图片不显示的时候
        }
    </style>
    <nav id="nav">
        <span id="t_mall"></span>
        <ul>
            <li>双11狂欢</li>
            <li>服装会场</li>
            <li>数码家电</li>
            <li>家居建材</li>
            <li>母爱童装</li>
            <li>手机会场</li>
            <li>美妆会场</li>
            <li>进口会场</li>
            <li>飞猪旅行</li>
        </ul>
    </nav>
    <script>
        var nav=document.getElementById("nav");
        var t_mall=nav.children[0];
        var ul=nav.children[1];
        var allLis=ul.children;
        //记录鼠标点击的位置(初始时刻)，当鼠标的位置发生改变时猫的位置才改变，
            因此需要记录鼠标的位置才能设置猫的位置
        var beginX=0;
        //遍历所有的li标签
        for(var i=0;i<allLis.length;i++){
            var li=allLis[i];
            li.onmouseover=function(){
                //获取当前的li的左边的距离,将鼠标的位置给end
                end=this.offsetLeft;(给缓动动画)//猫是跟着鼠标运动的
            }
            li.onclick=function(){
                beginX=this.offsetLeft;//鼠标点击时就是猫此时变化的结束位置
            }//beginX记录鼠标点击时位置
            li.onmouseout=function(){
                end=beginX;//让鼠标回到初始的位置
            }
            //缓存动画要确定起始位置和结束位置
            //缓动动画(当鼠标移动时猫的位置发生改变，所以需要用到缓动动画)
            var begin=0,end=0;
            setInterval(function(){
                var x=(end-begin)*0.1+begin;
                t_mall.style.left=x+'px';//计算出猫移动的距离
            },10);
        }
    </script>
