<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <canvas width="600px" height="400px"></canvas>
    <script>

        // 创建一个折线图对象

        var LineChart=function(ctx){
            this.ctx=ctx||document.querySelector("canvas").getContext('2d');
            this.canvasWidth=this.ctx.canvas.width;
            this.canvasHeight=this.ctx.canvas.height;
            this.gridSize=10;
            this.space=20;
            this.x0=this.space;
            this.y0=this.canvasHeight-this.space;
            this.arrowSize=10;
            this.dottedSize=6;
        }

        // 折线图的初始化
        LineChart.prototype.init=function(data){
            this.drawGrid();
            this.drawAxis();
            this.drawDotted(data);
        }

        // 画表格
        LineChart.prototype.drawGrid=function(){
            var xLine=Math.floor(this.canvasHeight/this.gridSize);
            var yLine=Math.floor(this.canvasWidth/this.gridSize);
            for(var i=0;i<xLine;i++){
                this.ctx.beginPath();
                this.ctx.strokeStyle="#eee";
                this.ctx.moveTo(0,i*this.gridSize-0.5);
                this.ctx.lineTo(this.canvasWidth,i*this.gridSize-0.5);
                this.ctx.stroke();
            }
            for(var i=0;i<yLine;i++){
                this.ctx.beginPath();
                this.ctx.strokeStyle="#eee";
                this.ctx.moveTo(i*this.gridSize-0.5,0);
                this.ctx.lineTo(i*this.gridSize-0.5,this.canvasHeight);
                this.ctx.stroke();
            }
        }

        // 画坐标系
        LineChart.prototype.drawAxis=function(){
            this.ctx.beginPath();

            // x轴
            this.ctx.strokeStyle="#000";
            this.ctx.moveTo(this.x0,this.y0);
            this.ctx.lineTo(this.canvasWidth-this.space,this.y0);
            this.ctx.lineTo(this.canvasWidth-this.space-this.arrowSize,this.y0-this.arrowSize/2);
            this.ctx.lineTo(this.canvasWidth-this.space-this.arrowSize,this.y0+this.arrowSize/2);
            this.ctx.lineTo(this.canvasWidth-this.space,this.y0);
            this.ctx.fill();
            this.ctx.stroke();

            // y轴
            this.ctx.beginPath();
            this.ctx.strokeStyle = '#000';
            this.ctx.moveTo(this.x0, this.y0);
            this.ctx.lineTo(this.space, this.space);
            this.ctx.lineTo(this.space + this.arrowSize / 2, this.space + this.arrowSize);
            this.ctx.lineTo(this.space - this.arrowSize / 2, this.space + this.arrowSize);
            this.ctx.lineTo(this.space, this.space);
            this.ctx.stroke();
            this.ctx.fill();
        }

        // 画点
        LineChart.prototype.drawDotted=function(data){
            var that=this;
            var preCanvasX=0;
            var preCanvasY=0;
            data.forEach(function(item,i){
                var canvasX=item.x+that.x0;
                var canvasY=that.y0-item.y;
                that.ctx.beginPath();
                that.ctx.moveTo(canvasX-that.dottedSize/2,canvasY-that.dottedSize/2);
                that.ctx.lineTo(canvasX+that.dottedSize/2,canvasY-that.dottedSize/2);
                that.ctx.lineTo(canvasX + that.dottedSize / 2, canvasY + that.dottedSize / 2);
                that.ctx.lineTo(canvasX - that.dottedSize / 2, canvasY + that.dottedSize / 2);
                that.ctx.closePath();
                that.ctx.fill();
                if(i==0){
                    that.ctx.beginPath();
                    that.ctx.moveTo(that.x0,that.y0);
                    that.ctx.lineTo(canvasX,canvasY);
                    that.ctx.stroke();
                }else{
                    that.ctx.beginPath();
                    that.ctx.moveTo(preCanvasX,preCanvasY);
                    that.ctx.lineTo(canvasX,canvasY);
                    that.ctx.stroke();
                }
                preCanvasX=canvasX;
                preCanvasY=canvasY;
            });
        }

        // 点的数据信息
        var data=[
            {x:100,y:120},{x:200,y:160},{x:300,y:240},{x:400,y:120},{x:500,y:80}
        ];

        var lineChart=new LineChart();
        lineChart.init(data);
    </script>
</body>
</html>