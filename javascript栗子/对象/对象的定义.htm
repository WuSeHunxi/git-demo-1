<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <script>
        //系统的构造函数创建对象
            var obj=new Object();//Object系统的构造函数
            obj.name="lll";//添加属性的方法
            obj.eat=function(){//添加对象方法的方法
                console.log("jajja");
            }
            console.log(obj);
            //工厂模式创建对象
                //使用this代表当前的这个对象
                function createObject(name,age){
                    var obj=new Object();
                    obj.name=name;
                    obj.age=age;
                    obj.eat=function(){
                        console.log(this.age,this.name);
                    }
                    return obj;
                }
                var person=createObject("lalla","lla");
                console.log(person.age);

        //自定义构造函数创建对象
            function Person(name,age){
                this.name=name;
                this.age=age;
                this.eat=function(){
                    console.log("eating"+this.name);
                }
            }
            var obj=new Person("haha","jj");
            console.log(obj.name);
            obj.eat();
            console.log(obj instanceof Person);
            /*
            var obj=new Person("haha","jj")干了以下四件事
                1.在内存中开辟空间，存储创建的新对象
                2.把this设置为当前的对象
                3.设置对象的属性和方法的值
                4.把this这个对象返回
            */
        //字面量对象--->也可以直接定义一个空对象，在外面添加属性和方法
            var obj={  //--->字面量对象属于一次性对象
                name:"llal",
                age:19,
                eating:function(){
                    console.log("eating"+" "+this.age);
                }
            }
            console.log(obj);
            obj.eating();
    </script>
</body>
</html>